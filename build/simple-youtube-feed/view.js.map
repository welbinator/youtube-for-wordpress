{"version":3,"file":"simple-youtube-feed/view.js","mappings":"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","sources":["webpack://youtube-for-wordpress/./src/simple-youtube-feed/view.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", async () => {\n    const container = document.getElementById(\"youtube-feed-container\");\n\n    // Ensure container is available and not already initialized\n    if (!container) {\n        console.warn(\"YouTube feed container not found.\");\n        return;\n    }\n\n    if (container.hasAttribute('data-initialized')) {\n        return;\n    }\n\n    container.setAttribute('data-initialized', 'true');\n\n    const channelId = container.getAttribute('data-channel-id') || YT_FOR_WP.channelId;\n    const enableSearch = container.getAttribute('data-enable-search') === 'true';\n    const enablePlaylistFilter = container.getAttribute('data-enable-playlist-filter') === 'true';\n    const layout = container.getAttribute('data-layout') || 'grid';\n    const maxVideos = parseInt(container.getAttribute('data-max-videos'), 10) || 10;\n    const selectedPlaylist = container.getAttribute('data-selected-playlist');\n    const apiUrlBase = `https://www.googleapis.com/youtube/v3`;\n    const apiKey = YT_FOR_WP.apiKey;\n\n    // Define fetch options with headers\n    const fetchOptions = {\n        headers: {\n            'Referer': YT_FOR_WP.siteUrl,\n            'Origin': YT_FOR_WP.siteUrl\n        }\n    };\n\n    // Cache for avoiding repeated queries\n    const cache = {};\n\n    let playlists = [];\n    let nextPageToken = null;\n\n    // Function to fetch playlists\n    async function fetchPlaylists(loadMore = false) {\n        let apiUrl = `${apiUrlBase}/playlists?part=snippet&channelId=${channelId}&key=${apiKey}&maxResults=50`;\n        if (nextPageToken && loadMore) {\n            apiUrl += `&pageToken=${nextPageToken}`;\n        }\n\n        try {\n            const response = await fetch(apiUrl, fetchOptions);\n            const data = await response.json();\n\n            if (data.error) {\n                console.error('YouTube API Error:', data.error);\n                return;\n            }\n\n            if (data.items) {\n                playlists = loadMore\n                    ? [...playlists, ...data.items]\n                    : [{ id: '', snippet: { title: 'All Videos' } }, ...data.items];\n            }\n            nextPageToken = data.nextPageToken || null;\n            renderLoadMoreButton();\n        } catch (error) {\n            console.error('Error fetching playlists:', error);\n        }\n    }\n\n    // Render the \"Load More\" button only if there are more playlists to load\n    function renderLoadMoreButton() {\n        const filterContainer = document.querySelector(\".youtube-filter-container\");\n        if (!filterContainer) {\n            console.warn(\"Filter container not found for Load More button.\");\n            return;\n        }\n        const existingButton = document.querySelector(\".load-more-button\");\n\n        if (existingButton) existingButton.remove();\n        if (nextPageToken && filterContainer) {\n            const loadMoreButton = document.createElement(\"button\");\n            loadMoreButton.textContent = \"Load More\";\n            loadMoreButton.classList.add(\"load-more-button\");\n            loadMoreButton.addEventListener(\"click\", () => fetchPlaylists(true));\n            filterContainer.appendChild(loadMoreButton);\n        }\n    }\n\n    // Call fetchPlaylists initially to load the first set of playlists\n    await fetchPlaylists();\n\n    // Function to fetch videos\n    async function fetchVideos(searchQuery = '', playlistId = '') {\n        const cacheKey = `${searchQuery}-${playlistId}`;\n        if (cache[cacheKey]) return cache[cacheKey];\n\n        let apiUrl = `${apiUrlBase}/search?part=snippet&type=video&channelId=${channelId}&maxResults=${maxVideos}&key=${apiKey}`;\n        if (playlistId) {\n            apiUrl = `${apiUrlBase}/playlistItems?part=snippet&maxResults=${maxVideos}&playlistId=${playlistId}&key=${apiKey}`;\n        }\n        if (searchQuery) {\n            apiUrl += `&q=${encodeURIComponent(searchQuery)}`;\n        }\n\n        try {\n            const response = await fetch(apiUrl, fetchOptions);\n            const data = await response.json();\n            \n            if (data.error) {\n                console.error('YouTube API Error:', data.error);\n                return [];\n            }\n            \n            cache[cacheKey] = data.items || [];\n            return cache[cacheKey];\n        } catch (error) {\n            console.error('Error fetching videos:', error);\n            return [];\n        }\n    }\n\n    // Create filter container if needed\n    if (enableSearch || enablePlaylistFilter) {\n        const filterContainer = document.createElement(\"div\");\n        filterContainer.classList.add(\"youtube-filter-container\");\n\n        // Render playlist dropdown\n        if (enablePlaylistFilter) {\n            const dropdown = document.createElement(\"select\");\n            dropdown.classList.add(\"youtube-playlist-dropdown\");\n\n            playlists.forEach(({ id, snippet }) => {\n                const option = document.createElement(\"option\");\n                option.value = id;\n                option.textContent = snippet.title;\n                if (id === selectedPlaylist) {\n                    option.selected = true; // Set default option if selected\n                }\n                dropdown.appendChild(option);\n            });\n\n            dropdown.addEventListener(\"change\", async () => {\n                const playlistId = dropdown.value;\n                const searchQuery = document.querySelector(\".youtube-search-bar\")?.value.trim() || '';\n                const videos = await fetchVideos(searchQuery, playlistId);\n                renderVideos(container, videos, layout);\n            });\n\n            filterContainer.appendChild(dropdown);\n        }\n\n        // Render search bar\n        if (enableSearch) {\n            const searchContainer = document.createElement(\"div\");\n            searchContainer.classList.add(\"youtube-search-container\");\n\n            const searchBar = document.createElement(\"input\");\n            searchBar.type = \"text\";\n            searchBar.placeholder = \"Search videos\";\n            searchBar.classList.add(\"youtube-search-bar\");\n\n            const searchButton = document.createElement(\"button\");\n            searchButton.textContent = \"Search\";\n            searchButton.classList.add(\"youtube-search-button\");\n\n            searchBar.addEventListener(\"keypress\", (event) => {\n                if (event.key === \"Enter\") {\n                    event.preventDefault();\n                    searchButton.click();\n                }\n            });\n\n            searchButton.addEventListener(\"click\", async () => {\n                const keyword = searchBar.value.trim();\n                const playlistId = document.querySelector(\".youtube-playlist-dropdown\")?.value || '';\n                const videos = await fetchVideos(keyword, playlistId);\n                renderVideos(container, videos, layout);\n            });\n\n            searchContainer.appendChild(searchBar);\n            searchContainer.appendChild(searchButton);\n            filterContainer.appendChild(searchContainer);\n        }\n\n        container.appendChild(filterContainer);\n    }\n\n    // Initial video load\n    const initialVideos = await fetchVideos();\n    renderVideos(container, initialVideos, layout);\n});\n\n// Render videos\nfunction renderVideos(container, videos, layout) {\n    const existingVideoContainer = container.querySelector(\".video-container\");\n    if (existingVideoContainer) {\n        existingVideoContainer.remove();\n    }\n\n    const videoContainer = document.createElement(\"div\");\n    videoContainer.classList.add(\"video-container\");\n\n    if (layout === \"grid\") {\n        videoContainer.classList.add(\"youtube-feed-grid\");\n    } else if (layout === \"list\") {\n        videoContainer.classList.add(\"youtube-feed-list\");\n    } else if (layout === \"carousel\") {\n        videoContainer.classList.add(\"swiper-container\");\n        videoContainer.innerHTML = `\n            <div class=\"swiper-wrapper\">\n                ${videos\n                    .map(\n                        (video) => `\n                    <div class=\"swiper-slide\">\n                        <iframe\n                            src=\"https://www.youtube.com/embed/${video.id.videoId || video.snippet.resourceId?.videoId}?vq=hd720\"\n                            title=\"${video.snippet.title}\"\n                            class=\"video-iframe\"\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                            allowfullscreen\n                        ></iframe>\n                        <div class=\"video-info\">\n                            <h2 class=\"video-title\">${video.snippet.title}</h2>\n                            <p class=\"video-description\">${video.snippet.description}</p>\n                        </div>\n                    </div>\n                `\n                    )\n                    .join('')}\n            </div>\n            <div class=\"swiper-pagination\"></div>\n            <div class=\"swiper-button-next\"></div>\n            <div class=\"swiper-button-prev\"></div>\n        `;\n        container.appendChild(videoContainer);\n\n        // Initialize Swiper.js for Carousel\n        new Swiper(\".swiper-container\", {\n            slidesPerView: 1,\n            spaceBetween: 10,\n            navigation: {\n                nextEl: \".swiper-button-next\",\n                prevEl: \".swiper-button-prev\",\n            },\n            pagination: {\n                el: \".swiper-pagination\",\n                clickable: true,\n            },\n            loop: true,\n            breakpoints: {\n                640: { slidesPerView: 1, spaceBetween: 10 },\n                768: { slidesPerView: 2, spaceBetween: 20 },\n                1024: { slidesPerView: 3, spaceBetween: 30 },\n            },\n        });\n\n        return; // Exit early since the carousel is fully rendered\n    }\n\n    container.appendChild(videoContainer);\n\n    // Populate videos for \"Grid\" and \"List\" layouts\n    videos.forEach((video) => {\n        const videoElement = document.createElement(\"div\");\n        videoElement.classList.add(\n            layout === \"grid\" ? \"youtube-video-grid-item\" : \"youtube-video-list-item\"\n        );\n\n        const title = video.snippet.title;\n        const description = video.snippet.description;\n        const videoId = video.id.videoId || video.snippet.resourceId?.videoId;\n        const videoUrl = `https://www.youtube.com/embed/${videoId}?vq=hd720`;\n\n        videoElement.innerHTML = `\n            <div class=\"video-iframe-wrapper\">\n                <iframe\n                    src=\"${videoUrl}\"\n                    title=\"${title}\"\n                    class=\"video-iframe\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen\n                ></iframe>\n            </div>\n            <div class=\"video-info\">\n                <h2 class=\"video-title\">${title}</h2>\n                <p class=\"video-description\">${description}</p>\n            </div>\n        `;\n\n        videoContainer.appendChild(videoElement);\n    });\n}"],"names":["document","addEventListener","container","getElementById","console","warn","hasAttribute","setAttribute","channelId","getAttribute","YT_FOR_WP","enableSearch","enablePlaylistFilter","layout","maxVideos","parseInt","selectedPlaylist","apiUrlBase","apiKey","fetchOptions","headers","siteUrl","cache","playlists","nextPageToken","fetchPlaylists","loadMore","apiUrl","response","fetch","data","json","error","items","id","snippet","title","renderLoadMoreButton","filterContainer","querySelector","existingButton","remove","loadMoreButton","createElement","textContent","classList","add","appendChild","fetchVideos","searchQuery","playlistId","cacheKey","encodeURIComponent","dropdown","forEach","option","value","selected","trim","videos","renderVideos","searchContainer","searchBar","type","placeholder","searchButton","event","key","preventDefault","click","keyword","initialVideos","existingVideoContainer","videoContainer","innerHTML","map","video","videoId","resourceId","description","join","Swiper","slidesPerView","spaceBetween","navigation","nextEl","prevEl","pagination","el","clickable","loop","breakpoints","videoElement","videoUrl"],"sourceRoot":""}