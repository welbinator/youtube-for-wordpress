{"version":3,"file":"simple-youtube-feed/view.js","mappings":"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","sources":["webpack://youtube-for-wordpress/./src/simple-youtube-feed/view.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", async () => {\n    const container = document.getElementById(\"youtube-feed-container\");\n    const enableSearch = container.getAttribute('data-enable-search') === 'true';\n\n    // Ensure container is available\n    if (!container || container.hasAttribute('data-initialized')) {\n        return;\n    }\n\n    container.setAttribute('data-initialized', 'true');\n\n    const layout = container.getAttribute('data-layout') || 'grid';\n    const maxVideos = parseInt(container.getAttribute('data-max-videos'), 10) || 10;\n    const selectedPlaylist = container.getAttribute('data-selected-playlist');\n    const apiUrlBase = `https://www.googleapis.com/youtube/v3`;\n\n    // Function to perform API fetch\n    async function fetchVideos(searchQuery = '') {\n        let apiUrl = `${apiUrlBase}/search?part=snippet&type=video&channelId=${YT_FOR_WP.channelId}&maxResults=${maxVideos}&key=${YT_FOR_WP.apiKey}`;\n        \n        if (selectedPlaylist) {\n            apiUrl = `${apiUrlBase}/playlistItems?part=snippet&maxResults=${maxVideos}&playlistId=${selectedPlaylist}&key=${YT_FOR_WP.apiKey}`;\n        }\n\n        // Add search query parameter if provided\n        if (searchQuery) {\n            apiUrl += `&q=${encodeURIComponent(searchQuery)}`;\n        }\n\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        return data.items || [];\n    }\n\n    // Render search bar if enabled\n    if (enableSearch && !document.querySelector(\".youtube-search-container\")) {\n        const searchContainer = document.createElement(\"div\");\n        searchContainer.classList.add(\"youtube-search-container\");\n\n        const searchBar = document.createElement(\"input\");\n        searchBar.type = \"text\";\n        searchBar.placeholder = \"Search videos\";\n        searchBar.classList.add(\"youtube-search-bar\");\n\n        const searchButton = document.createElement(\"button\");\n        searchButton.textContent = \"Search\";\n        searchButton.classList.add(\"youtube-search-button\");\n\n        searchButton.addEventListener(\"click\", async () => {\n            const keyword = searchBar.value.trim();\n            const videos = await fetchVideos(keyword);\n            renderVideos(videoContainer, videos, layout);\n        });\n\n        searchContainer.appendChild(searchBar);\n        searchContainer.appendChild(searchButton);\n        container.appendChild(searchContainer);\n    }\n\n    // Initial video load\n    const videoContainer = document.createElement(\"div\");\n    videoContainer.classList.add(layout === \"grid\" ? \"youtube-feed-grid\" : \"youtube-feed-list\");\n    container.appendChild(videoContainer);\n\n    const initialVideos = await fetchVideos();\n    renderVideos(videoContainer, initialVideos, layout);\n});\n\nfunction renderVideos(videoContainer, videos, layout) {\n    videoContainer.innerHTML = \"\";\n\n    videos.forEach(video => {\n        const videoElement = document.createElement(\"div\");\n        videoElement.classList.add(layout === \"grid\" ? \"youtube-video-grid-item\" : \"youtube-video-list-item\");\n\n        const title = video.snippet.title;\n        const description = video.snippet.description;\n        const videoId = video.id.videoId || video.snippet.resourceId?.videoId;\n        const videoUrl = `https://www.youtube.com/embed/${videoId}?vq=hd720`;\n\n        videoElement.innerHTML = `\n            <div class=\"video-iframe-wrapper\">\n                <iframe\n                    src=\"${videoUrl}\"\n                    title=\"${title}\"\n                    class=\"video-iframe\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen\n                ></iframe>\n            </div>\n            <div class=\"video-info\">\n                <h2 class=\"video-title\">${title}</h2>\n                <p class=\"video-description\">${description}</p>\n            </div>\n        `;\n\n        videoContainer.appendChild(videoElement);\n    });\n}\n"],"names":["document","addEventListener","container","getElementById","enableSearch","getAttribute","hasAttribute","setAttribute","layout","maxVideos","parseInt","selectedPlaylist","apiUrlBase","fetchVideos","searchQuery","apiUrl","YT_FOR_WP","channelId","apiKey","encodeURIComponent","response","fetch","data","json","items","querySelector","searchContainer","createElement","classList","add","searchBar","type","placeholder","searchButton","textContent","keyword","value","trim","videos","renderVideos","videoContainer","appendChild","initialVideos","innerHTML","forEach","video","videoElement","title","snippet","description","videoId","id","resourceId","videoUrl"],"sourceRoot":""}