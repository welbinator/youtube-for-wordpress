{"version":3,"file":"simple-youtube-feed/view.js","mappings":"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","sources":["webpack://youtube-for-wordpress/./src/simple-youtube-feed/view.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", async () => {\n    const container = document.getElementById(\"youtube-feed-container\");\n\n    // Ensure container is available\n    if (!container) {\n        return;\n    }\n\n    // Retrieve layout, max videos, and selected playlist from data attributes\n    const layout = container.getAttribute('data-layout') || 'grid';\n    const maxVideos = parseInt(container.getAttribute('data-max-videos'), 10) || 5;\n    const selectedPlaylist = container.getAttribute('data-selected-playlist');\n   \n    \n    // Construct the API URL based on selected playlist\n    let apiUrl = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=${maxVideos}&key=${YT_FOR_WP.apiKey}`;\n\n    if (selectedPlaylist) {\n        apiUrl += `&playlistId=${selectedPlaylist}`;\n    } else {\n        apiUrl = `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&channelId=${YT_FOR_WP.channelId}&maxResults=${maxVideos}&key=${YT_FOR_WP.apiKey}`;\n    }\n\n    // Fetch videos\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    const videos = data.items || [];\n\n    // Render based on the selected layout\n    if (layout === 'grid') {\n        renderGridLayout(container, videos);\n    } else {\n        renderListLayout(container, videos);\n    }\n});\n\nfunction renderGridLayout(container, videos) {\n    container.innerHTML = \"\"; // Clear previous content\n    const gridContainer = document.createElement(\"div\");\n    gridContainer.classList.add(\"youtube-feed-grid\");\n    container.appendChild(gridContainer);\n\n    videos.forEach(video => {\n        const videoElement = document.createElement(\"div\");\n        videoElement.classList.add(\"youtube-video-grid-item\");\n\n        const title = video.snippet.title;\n        const description = video.snippet.description;\n        const videoId = video.snippet.resourceId?.videoId || video.id.videoId;\n        const videoUrl = `https://www.youtube.com/embed/${videoId}?vq=hd720`; // Request HD preview\n\n        videoElement.innerHTML = `\n            <div class=\"video-iframe-wrapper\">\n                <iframe\n                    src=\"${videoUrl}\"\n                    title=\"${title}\"\n                    class=\"video-iframe\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen\n                ></iframe>\n            </div>\n            <div class=\"video-info\">\n                <h2 class=\"video-title\">${title}</h2>\n                <p class=\"video-description\">${description}</p>\n            </div>\n        `;\n\n        gridContainer.appendChild(videoElement);\n    });\n}\n\nfunction renderListLayout(container, videos) {\n    container.innerHTML = \"\"; // Clear previous content\n    const listContainer = document.createElement(\"div\");\n    listContainer.classList.add(\"youtube-feed-list\");\n    container.appendChild(listContainer);\n\n    videos.forEach(video => {\n        const videoElement = document.createElement(\"div\");\n        videoElement.classList.add(\"youtube-video-list-item\");\n\n        const title = video.snippet.title;\n        const description = video.snippet.description;\n        const videoId = video.snippet.resourceId?.videoId || video.id.videoId;\n        const videoUrl = `https://www.youtube.com/embed/${videoId}?vq=hd720`; // Request HD preview\n\n        videoElement.innerHTML = `\n            <div class=\"video-iframe-wrapper\">\n                <iframe\n                    src=\"${videoUrl}\"\n                    title=\"${title}\"\n                    class=\"video-iframe\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen\n                ></iframe>\n            </div>\n            <div class=\"video-info\">\n                <h2 class=\"video-title\">${title}</h2>\n                <p class=\"video-description\">${description}</p>\n            </div>\n        `;\n\n        listContainer.appendChild(videoElement);\n    });\n}\n"],"names":["document","addEventListener","container","getElementById","layout","getAttribute","maxVideos","parseInt","selectedPlaylist","apiUrl","YT_FOR_WP","apiKey","channelId","response","fetch","data","json","videos","items","renderGridLayout","renderListLayout","innerHTML","gridContainer","createElement","classList","add","appendChild","forEach","video","videoElement","title","snippet","description","videoId","resourceId","id","videoUrl","listContainer"],"sourceRoot":""}